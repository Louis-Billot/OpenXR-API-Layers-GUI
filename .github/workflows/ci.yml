name: Continuous Integration
on: [push, pull_request]
jobs:
  build:
    name: ${{matrix.os}}/${{matrix.arch}}/${{matrix.build-type}}
    runs-on: ${{matrix.runs-on}}
    steps:
      - uses: actions/checkout@v3
      - name: Make build directory
        run: cmake -E make_directory build
      - name: Configure
        working-directory: build
        run: |
          cmake .. `
            -DCMAKE_BUILD_TYPE=${{matrix.build-type}} `
            -A ${{matrix.arch}}
        shell: pwsh
      - name: Compile
        working-directory: build
        run: cmake --build . --parallel --config ${{matrix.build-type}} --verbose
      - name: Install
        working-directory: build
        run: |
          cmake --install . --config ${{matrix.build-type}} --prefix ${{runner.temp}}/install
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        if: ${{ matrix.build-type != 'Debug' }}
        with:
          name: ${{matrix.os}}-${{matrix.build-type}}
          path: ${{runner.temp}}/install
    strategy:
      fail-fast: false
      matrix:
        os: [windows]
        build-type: [RelWithDebInfo, Debug]
        include:
          - os: windows
            runs-on: windows-latest
            arch: [Win32, Win64]
  combined-zip:
    name: Make combined zip file
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: List artifacts
        working-directory: artifacts 
        run: Get-ChildItem -Recurse
      - name: Create combined installation dir
        working-directory: artifacts
        id: install
        run: |
          foreach ($subdir in (Get-ChildItem -Attribute Directory)) {
            xcopy /iqy "$subdir" ${{runner.temp}}/install
          }
          Get-ChildItem -Recurse ${{runner.temp}}/install
          
          Add-Content $Env:GITHUB_OUTPUT "version=$(Get-Content ${{runner.temp}}/install/version.txt)"
      - name: Upload combined zip
        uses: actions/upload-artifact@v3
        with:
          name: "OpenXR-Layers-GUI-v${{steps.install.outputs.version}}"
          path: ${{runner.temp}}/install